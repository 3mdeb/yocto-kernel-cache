From 2072dd3b19d1b137d4c64d6162b03e509173e1e5 Mon Sep 17 00:00:00 2001
From: Yanfei Xu <yanfei.xu@windriver.com>
Date: Thu, 12 Mar 2020 00:57:37 +0800
Subject: [PATCH] aufs5:fix:avoid to access rw_sem.owner in RT kernel

Fix build failure.

owner member is now made a permanent member of the rw_semaphore in
v5.6 kernel(commitid:c71fd893f). But the rw_semaphore in RT kernel
had been implemented with rt_mutex in rwsem-rt.h. Add if statment
to distinguish the two cases.

---------------------Error messages---------------------
|
/buildarea1/nightly/WRLINUX_MASTER_WR/build_dir/OVP/GIT_202003/lxbuilds/intel-x86-64-preempt-rt-ovp-kvm/wrlinux/build_linux/tmp-glibc/work-shared/intel-x86-64/kernel-source/fs/aufs/i_op.c:
In function 'au_pin_hdir_set_owner':
|
/buildarea1/nightly/WRLINUX_MASTER_WR/build_dir/OVP/GIT_202003/lxbuilds/intel-x86-64-preempt-rt-ovp-kvm/wrlinux/build_linux/tmp-glibc/work-shared/intel-x86-64/kernel-source/fs/aufs/i_op.c:643:45:
error: 'struct rw_semaphore' has no member named 'owner'
|   643 |  atomic_long_set(&p->hdir->hi_inode->i_rwsem.owner,
(long)task);
|       |                                             ^
|   CC      fs/btrfs/zstd.o
|   AR      fs/kernfs/built-in.a
|   CC      arch/x86/kernel/io_delay.o
|   CC      net/ipv6/udplite.o
| make[3]: ***
[/buildarea1/nightly/WRLINUX_MASTER_WR/build_dir/OVP/GIT_202003/lxbuilds/intel-x86-64-preempt-rt-ovp-kvm/wrlinux/build_linux/tmp-glibc/work-shared/intel-x86-64/kernel-source/scripts/Makefile.build:265:
fs/aufs/i_op.o] Error 1
| make[3]: *** Waiting for unfinished jobs....
------------------------------------------------------

Signed-off-by: Yanfei Xu <yanfei.xu@windriver.com>

Signed-off-by: Bruce Ashfield <bruce.ashfield@gmail.com>
---
 fs/aufs/i_op.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/fs/aufs/i_op.c b/fs/aufs/i_op.c
index ef1e08c7ca10..926795a0101c 100644
--- a/fs/aufs/i_op.c
+++ b/fs/aufs/i_op.c
@@ -640,7 +640,11 @@ int au_pin_hdir_relock(struct au_pin *p)
 
 static void au_pin_hdir_set_owner(struct au_pin *p, struct task_struct *task)
 {
+#if !defined(CONFIG_PREEMPT_RT)
 	atomic_long_set(&p->hdir->hi_inode->i_rwsem.owner, (long)task);
+#else
+        p->hdir->hi_inode->i_rwsem.rtmutex.owner = task;
+#endif
 }
 
 void au_pin_hdir_acquire_nest(struct au_pin *p)
-- 
2.19.1

